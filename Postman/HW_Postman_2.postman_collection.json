{
	"info": {
		"_postman_id": "b06612e8-3f7b-4fb3-b18a-7bbf5fa60ebf",
		"name": "HW_Postman_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Status code is 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Отправить запрос.\r",
							"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
							"    console.log(response.json());\r",
							"});\r",
							"\r",
							"// Статус 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// Проверить, что в body приходит правильный string.\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Отправить запрос\r",
							"\r",
							"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
							"    console.log(response.json());\r",
							"});\r",
							"\r",
							"// Статус 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Спарсить response body в json.\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"// Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"\r",
							"pm.test(\"Check Name\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(\"Oleg\");\r",
							"});\r",
							"\r",
							"// Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"\r",
							"pm.test(\"Check Age\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(\"32\");\r",
							"});\r",
							"\r",
							"// Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"\r",
							"pm.test(\"CheckSalary\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(1250);\r",
							"});\r",
							"\r",
							"// Спарсить request\r",
							"\r",
							"var req = request.data;\r",
							"\r",
							"// Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"\r",
							"pm.test(\"Chech_requstName\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(req.name);\r",
							"});\r",
							"// Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"\r",
							"pm.test(\"Chech_requstAge\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(req.age);\r",
							"});\r",
							"\r",
							"// Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"\r",
							"pm.test(\"Chech_requstSalary\", function () {\r",
							"    var sal = parseInt(req.salary);\r",
							"    pm.expect(jsonData.salary).to.eql(sal);\r",
							"});\r",
							"\r",
							"// Вывести в консоль параметр family из response.\r",
							"\r",
							"console.log(req.family);\r",
							"\r",
							"// Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"pm.test(\"Check Salary*4\", function () {\r",
							"    pm.expect(jsonData.family.u_salary_1_5_year).to.eql(req.salary*4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Oleg",
							"type": "default"
						},
						{
							"key": "age",
							"value": "32",
							"type": "default"
						},
						{
							"key": "salary",
							"value": "1250",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Отправить запрос.\r",
							"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
							"    console.log(response.json());\r",
							"});\r",
							"\r",
							"//Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Спарсить response body в json.\r",
							"    var jsonData = pm.response.json();\r",
							"      \r",
							"//Спарсить request.\r",
							"    var req = pm.request.url.query.toObject();\r",
							"    var sal = parseInt(req.salary);\r",
							"\r",
							"pm.test(\"Check_name\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(req.name);\r",
							"});\r",
							"\r",
							"pm.test(\"Check_age\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(req.age);\r",
							"});\r",
							"\r",
							"pm.test(\"Check_Salary\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(sal);\r",
							"});\r",
							"\r",
							" console.log (jsonData.family) ;\r",
							"\r",
							"pm.test(\"Check_Dog_Property_Name\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"name\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check_DogAge\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"age\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check_DogName\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog.name).to.be.oneOf([\"Luky\"]);\r",
							"});\r",
							"\r",
							"pm.test(\"Check_Mening_of_DogAge\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog.age).to.be.oneOf([4]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Victor&age=48&salary=2780",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Victor"
						},
						{
							"key": "age",
							"value": "48"
						},
						{
							"key": "salary",
							"value": "2780"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Отправить запрос.\r",
							"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
							"    console.log(response.json());\r",
							"});\r",
							"\r",
							"//Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Спарсить response body в json.\r",
							"   var jsonData = pm.response.json();\r",
							"\r",
							"//Спарсить request.\r",
							"    var req = pm.request.url.query.toObject();\r",
							"    var age = parseInt(req.age);\r",
							"    var sal = parseInt(req.salary);\r",
							"\r",
							"//Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Check_name\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(req.name);\r",
							"});\r",
							"\r",
							"// Проверить, что age в ответе равно age из request (age забрать из request.)\r",
							"pm.test(\"Check_age\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(age);\r",
							"});\r",
							"\r",
							"// Вывести в консоль параметр salary из request.\r",
							"console.log(req.salary);\r",
							"\r",
							"// Вывести в консоль параметр salary из response.\r",
							"console.log(jsonData.salary);\r",
							"\r",
							"// Вывести в консоль 0-й элемент параметра salary из response.\r",
							"console.log(jsonData.salary[0]);\r",
							"\r",
							"// Вывести в консоль 1-й элемент параметра salary параметр salary из response. \r",
							"console.log(jsonData.salary[1]);\r",
							"\r",
							"// Вывести в консоль 2-й элемент параметра salary параметр salary из response. \r",
							"console.log(jsonData.salary[2]);\r",
							"\r",
							"// Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"Compare items salary\", function () {\r",
							"    \r",
							"    pm.expect(jsonData.salary[0]).to.eql(sal);\r",
							"});\r",
							"\r",
							"// Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"Compare items salary\", function () {\r",
							"    var JsonSal = parseInt(jsonData.salary[1]);\r",
							"    pm.expect(JsonSal).to.eql(sal*2);\r",
							"});\r",
							"\r",
							"// Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"pm.test(\"Compare items salary\", function () {\r",
							"    var JsonSal = parseInt(jsonData.salary[2]);\r",
							"    pm.expect(JsonSal).to.eql(sal*3);\r",
							"});\r",
							"\r",
							"// Передать в окружение переменную name\r",
							"pm.environment.set(\"name\", req.name);\r",
							"\r",
							"// Передать в окружение переменную age\r",
							"pm.environment.set(\"age\", req.age);\r",
							"\r",
							"// Передать в окружение переменную salary\r",
							"pm.environment.set(\"salary\", req.salary);\r",
							"\r",
							"// Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
							"\r",
							"for (var i = 0; i < 2; i++) {\r",
							"    console.log (jsonData.salary[i]);\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Alex&age=45&salary=1280",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Alex"
						},
						{
							"key": "age",
							"value": "45"
						},
						{
							"key": "salary",
							"value": "1280"
						}
					]
				}
			},
			"response": []
		}
	]
}